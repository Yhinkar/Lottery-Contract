/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BankSimulation,
  BankSimulationInterface,
} from "../../Banksimulation.sol/BankSimulation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieveFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withDrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060146101000a81548160ff02191690831515021790555034801561002a57600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9050505061057f8061005e6000396000f3fe60806040526004361061003f5760003560e01c806361b20d8c14610044578063788d35d31461006f578063990dc9db14610098578063ed21248c146100c1575b600080fd5b34801561005057600080fd5b506100596100cb565b60405161006691906103b5565b60405180910390f35b34801561007b57600080fd5b5061009660048036038101906100919190610401565b610161565b005b3480156100a457600080fd5b506100bf60048036038101906100ba919061048c565b6102c1565b005b6100c961039a565b005b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610529565b60405180910390fd5b47905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e690610529565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561022957600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050156102a3576001600060146101000a81548160ff0219169083151502179055506102be565b60008060146101000a81548160ff0219169083151502179055505b50565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034690610529565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610395573d6000803e3d6000fd5b505050565b565b6000819050919050565b6103af8161039c565b82525050565b60006020820190506103ca60008301846103a6565b92915050565b600080fd5b6103de8161039c565b81146103e957600080fd5b50565b6000813590506103fb816103d5565b92915050565b600060208284031215610417576104166103d0565b5b6000610425848285016103ec565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104598261042e565b9050919050565b6104698161044e565b811461047457600080fd5b50565b60008135905061048681610460565b92915050565b600080604083850312156104a3576104a26103d0565b5b60006104b185828601610477565b92505060206104c2858286016103ec565b9150509250929050565b600082825260208201905092915050565b7f43686965662120596f75277265206e6f74206f776e6572000000000000000000600082015250565b60006105136017836104cc565b915061051e826104dd565b602082019050919050565b6000602082019050818103600083015261054281610506565b905091905056fea2646970667358221220748ffaa0e2700e443a5d36413ad1697f3a688cd59d2fa0c35bd446d462a5379964736f6c63430008090033";

type BankSimulationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankSimulationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankSimulation__factory extends ContractFactory {
  constructor(...args: BankSimulationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BankSimulation> {
    return super.deploy(overrides || {}) as Promise<BankSimulation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BankSimulation {
    return super.attach(address) as BankSimulation;
  }
  override connect(signer: Signer): BankSimulation__factory {
    return super.connect(signer) as BankSimulation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankSimulationInterface {
    return new utils.Interface(_abi) as BankSimulationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BankSimulation {
    return new Contract(address, _abi, signerOrProvider) as BankSimulation;
  }
}
